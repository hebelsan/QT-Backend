import QtQuick 2.7
import QtQuick.Controls.Styles 1.4
import QtLocation 5.5

//test
Item{
    //color: "green"
    id: hfuMediaLeft
    Image{
        width:parent.width
        height: parent.height
        source: "bilder/MediaLeft.png"

        Image {
            id: coverPic
            width: 240
            height: 220
            anchors.horizontalCenter: parent.horizontalCenter
            source: "bilder/cover.jpg"
            //color: "blue"
            anchors.top: parent.top
            anchors.topMargin: height*0.14        }

        Item{
            id: song
            height: 30
            width: 240
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.top: coverPic.bottom
            anchors.topMargin: parent.height*0.0265
            Canvas{
                id: song_gauge

                property real maxVal: 100
                property real minVal: 0

                property real value: canEventSink.song_time
                property real leftOffset: 0
                property real rightOffset: parent.width

                property real distanceOfVal: value/maxVal*(rightOffset-leftOffset)

                width: parent.width
                height: parent.height
                contextType: qsTr("2D")

                onMinValChanged: requestPaint()
                onMaxValChanged: requestPaint()
                onValueChanged: requestPaint()

                onPaint: {

                    var ctx = getContext("2d");
                    ctx.save();

                    ctx.clearRect(0, 0, width, height);

                    ctx.beginPath();
                    ctx.lineWidth = 20;
                    ctx.strokeStyle = Qt.rgba(0,0.55,1,1);
                    ctx.moveTo(leftOffset, parent.height/2);
                    ctx.lineTo(leftOffset + distanceOfVal, parent.height/2);
                    ctx.stroke();

                    /*ctx.beginPath();
                    ctx.lineWidth = 20;
                    ctx.strokeStyle = "red";
                    ctx.moveTo(leftOffset, parent.height/2);
                    ctx.lineTo(leftOffset + distanceOfVal, parent.height/2);
                    ctx.stroke();*/

                    ctx.restore();

                }

            }

        }
        Item{
            width: 220
            height: 135
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.top: song.bottom
            anchors.topMargin: parent.height *0.019
            //color: "white"
            Text{
                width:parent.width
                id: song_name
                font.pointSize: 20
                color: Qt.rgba(0,0.55,1,1)
                text:"Song"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
            Text{
                width:parent.width
                anchors.verticalCenter: parent.verticalCenter
                id: album_name
                font.pointSize: 20
                anchors.top: song_name.bottom
                color: Qt.rgba(0,0.55,1,1)
                text: "Album"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
            Text{
                width:parent.width
                id: interpret_name
                font.pointSize: 20
                anchors.top: album_name.bottom
                color: Qt.rgba(0,0.55,1,1)
                text: "Interpret"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
        }
    }

}
