#include "fpbmw.h"
#include <QDebug>
FPBMW::FPBMW() : FrameParser(nullptr)
{

}

void FPBMW::receiveCANFrame(QCanBusFrame frame){
    const qint32 id = frame.frameId();
    switch(id){
        //rpm
        case 0xa5:
            //qInfo() << "rpm: " << (((frame.payload()[6] * 256.0f) + frame.payload()[5]) / 4.0f);
            emit FrameParser::rpmFrameReceived((((frame.payload()[6] * 256.0f) + frame.payload()[5]) / 4.0f)*1.6f);
            break;
        case 0x254:

            qInfo() << "kmh: " <<
                       (( (((frame.payload()[1]*256.0f + frame.payload()[0]) - 32767.0f) / 50.0f) +
                         (((frame.payload()[3]*256.0f + frame.payload()[2]) - 32767.0f) / 50.0f) +
                         (((frame.payload()[5]*256.0f + frame.payload()[4]) - 32767.0f) / 50.0f) +
                         (((frame.payload()[7]*256.0f + frame.payload()[6]) - 32767.0f) / 50.0f) ) / 4.0f);

        /*( (((d[1]*256.0f + d[0]) - 32767.0f) / 50.0f) +
                (((d[3]*256.0f + d[2]) - 32767.0f) / 50.0f) +
                (((d[5]*256.0f + d[4]) - 32767.0f) / 50.0f) +
                (((d[7]*256.0f + d[6]) - 32767.0f) / 50.0f) ) / 4.0f;*/
      break;

            break;
        case 0x1f6:
            if (frame.payload()[0] == 0x91){
                //qInfo() << "turn left";
                emit FrameParser::turnSignalFrameReceived(Qt::LeftArrow);
            } else if (frame.payload()[0] == 0xa1){
                //qInfo() << "turn right";
                emit FrameParser::turnSignalFrameReceived(Qt::RightArrow);
            }
            break;
        default:
            break;
    }


}
