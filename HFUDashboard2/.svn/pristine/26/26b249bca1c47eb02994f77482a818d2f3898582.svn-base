import QtQuick 2.7

Rectangle {
    id: hfuDashboardRightView
    color: "yellow"

    Item{
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.top: parent.top
        anchors.topMargin: parent.height*0.1
        //color: NULL
        width: parent.width*0.7
        height: width
        Rectangle{
            id: wheelTop
            width:parent.width/4
            height: parent.height/4
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.top: parent.top
            anchors.topMargin: parent.height*0.01
            color: "black"
            Canvas{
                width:parent.width
                height: parent.height
                contextType: qsTr("2D")
                onWidthChanged: requestPaint()
                //fill: "blue"
                onPaint: {
                    var ctx = getContext("2d");
                    ctx.save();

                    ctx.clearRect(0, 0, width, height);
                    ctx.beginPath();
                    ctx.lineWidth = 10;
                    ctx.strokeStyle = "white";
                    ctx.arc(width/2, height/2, width/2*0.9, 0, 2*Math.PI);
                    /*ctx.strokeStyle="blue"
                    ctx.arcTo(width/2,height/2, parent.parent.width-width/2, parent.parent.height/2, parent.parent.width/2)*/

                    ctx.stroke();

                    ctx.restore();


                }
            }
        }

        Rectangle{
            id: wheelLeft
            width:parent.width/4
            height: parent.height/4
            anchors.verticalCenter: parent.verticalCenter
            anchors.left:  parent.left
            anchors.leftMargin: parent.width*0.01
            color: "black"
            Canvas{
                width:parent.width
                height: parent.height
                contextType: qsTr("2D")
                onWidthChanged: requestPaint()
                //fill: "blue"
                onPaint: {
                    var ctx = getContext("2d");
                    ctx.save();

                    ctx.clearRect(0, 0, width, height);
                    ctx.beginPath();
                    ctx.lineWidth = 10;
                    ctx.strokeStyle = "white";
                    ctx.arc(width/2, height/2, width/2*0.9, 0, 2*Math.PI);
                    /*ctx.strokeStyle="blue"
                    ctx.arcTo(width/2,height/2, parent.parent.width-width/2, parent.parent.height/2, parent.parent.width/2)*/

                    ctx.stroke();

                    ctx.restore();


                }
            }
        }

        Rectangle{
            id: wheelRight
            width:parent.width/4
            height: parent.height/4
            anchors.verticalCenter: parent.verticalCenter
            anchors.right:  parent.right
            anchors.rightMargin: parent.width*0.01
            color: "black"
            Canvas{
                width:parent.width
                height: parent.height
                contextType: qsTr("2D")
                onWidthChanged: requestPaint()
                //fill: "blue"
                onPaint: {
                    var ctx = getContext("2d");
                    ctx.save();

                    ctx.clearRect(0, 0, width, height);
                    ctx.beginPath();
                    ctx.lineWidth = 10;
                    ctx.strokeStyle = "white";
                    ctx.arc(width/2, height/2, width/2*0.9, 0, 2*Math.PI);
                    /*ctx.strokeStyle="blue"
                    ctx.arcTo(width/2,height/2, parent.parent.width-width/2, parent.parent.height/2, parent.parent.width/2)*/

                    ctx.stroke();

                    ctx.restore();


                }
            }
        }
        Rectangle{
            id: wheelBottom
            width:parent.width/4
            height: parent.height/4
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.bottom:  parent.bottom
            anchors.bottomMargin: parent.height*0.01
            color: "black"
            Canvas{
                width:parent.width
                height: parent.height
                contextType: qsTr("2D")
                onWidthChanged: requestPaint()
                //fill: "blue"
                onPaint: {
                    var ctx = getContext("2d");
                    ctx.save();

                    ctx.clearRect(0, 0, width, height);
                    ctx.beginPath();
                    ctx.lineWidth = 10;
                    ctx.strokeStyle = "white";
                    ctx.arc(width/2, height/2, width/2*0.9, 0, 2*Math.PI);
                    /*ctx.strokeStyle="blue"
                    ctx.arcTo(width/2,height/2, parent.parent.width-width/2, parent.parent.height/2, parent.parent.width/2)*/

                    ctx.stroke();

                    ctx.restore();


                }
            }
        }

    }

    ListView {
        id: listView1
        x: 202
        y: 207
        width: parent.width/2
        height: parent.height/3
        anchors.bottom: parent.bottom
        anchors.bottomMargin: parent.height*0.1

        model: ListModel {
            ListElement {
                name: "Grey"
                colorCode: "grey"
            }

            ListElement {
                name: "Red"
                colorCode: "red"
            }

            ListElement {
                name: "Blue"
                colorCode: "blue"
            }

            ListElement {
                name: "Green"
                colorCode: "green"
            }
        }
        delegate: Item {
            x: 5
            width: 80
            height: 40
            Row {
                id: row1
                Rectangle {
                    width: 40
                    height: 40
                    color: colorCode
                }

                Text {
                    text: name
                    anchors.verticalCenter: parent.verticalCenter
                    font.bold: true
                }
                spacing: 10
            }
        }
    }
}
